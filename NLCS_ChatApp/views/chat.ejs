<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="stylesheet" href="css/style.css" />
        <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" />
        <link rel="shortcut icon" href="images/icon.png" type="image/x-icon" />
        <title>VanouS Chat</title>
    </head>
    <body>
        <div class="mainContainer">
            <div class="left">
                <div class="userOnline"><i class="bx bxs-conversation"></i> VanouS Chat</div>
                <div id="user">
                    <!-- <form action="#" method="get">
                        <div id="search">
                            <input type="text" name="search" />
                            <button type="submit"><i class="bx bx-search"></i></button>
                        </div>
                    </form> -->
                    <div class="title">Chats</div>
                    <hr style="margin: 0 40px 0 40px" />
                    <div id="userName">
                        <!-- <button class="userItem" value="all">
                            <img src="images/user.png" alt="" style="width: 50px; height: 50px" />
                            <p>Pham Minh Sang</p>
                        </button>
                        <div class="userItem">
                            <img src="images/user.png" alt="" style="width: 50px; height: 50px" />
                            <p>Ng Van Binh</p>
                        </div>-->
                    </div>
                </div>
            </div>
            <div class="right">
                <div class="userInfo">
                    <p id="currentUser">Send to</p>
                    <a href="/logout"
                        ><button id="logoutBtn"><i class="bx bx-log-out"></i></button
                    ></a>
                </div>
                <div id="addFriend">
                    <div>
                        <div class="title">Friend Request</div>
                        <div id="friendRequest">
                            <!-- <div class="item">
                                <p style="width: 100%; text-align: center">No One</p>
                            </div> -->
                            <!-- <div class="item">
                                <i class="bx bx-chevron-right"></i>
                                <p style="max-width: 150px; text-align: left">Huỳnh lê</p>
                                <button value="" onclick="acceptFriendChat();">
                                    <i class="bx bx-check-double"></i>
                                </button>
                            </div> -->
                        </div>
                    </div>
                    <hr style="margin: 0px 3rem" />
                    <div>
                        <div class="title">Add conversation</div>
                        <div id="listUser">
                            <!-- <div class="item">
                                <p style="width: 100%; text-align: center">No One</p>
                            </div> -->
                        </div>
                    </div>
                </div>
                <div id="chatFrame">
                    <!-- <div class="chatContent otherChat">
                        <h5>Sang</h5>
                        <div class="item">
                            <p>Toi la Sang</p>
                        </div>
                        <p><span>08:11AM</span></p>
                    </div>
                    <div class="chatContent mineChat">
                        <h5>Sang</h5>
                        <div class="item">
                            <p>lorem50</p>
                        </div>
                        <p>08:11AM</p>
                    </div>-->
                </div>
                <div id="sendBox">
                    <form id="chatInput" method="post">
                        <input type="text" id="messageInput" placeholder="Nhập tin nhắn..." />
                        <input type="hidden" id="receiverMsg" />
                        <button type="submit" id="sendBtn"><i class="bx bxs-paper-plane"></i></button>
                    </form>
                    <div id="typing">User typing...</div>
                </div>
            </div>
        </div>
        <footer>&copy; Phạm Minh Sáng B2110976</footer>
        <script src="js/jquery-3.7.1.min.js"></script>
        <script src="/socket.io/socket.io.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.30.1/moment.min.js"></script>
        <% if(user) {%>
        <script>
            //Socketio lang nghe o server port 3000
            const socket = io('http://localhost:3000/chat');

            let message = document.getElementById('messageInput');
            let chatFrame = document.getElementById('chatFrame');
            let chatInput = document.getElementById('chatInput');
            let addFriend = document.getElementById('addFriend');
            const currentUser = document.getElementById('currentUser');
            // let currentTime = new Date().toLocaleDateString([], {
            //     hour: '2-digit',
            //     minute: '2-digit',
            // });
            let accountUser = '<%=user%>';
            let receiver = '';
            currentUser.textContent = accountUser;
            //-----------------Socket On of Function------------------
            socket.on('loadMessage', function (data) {
                chatFrame.innerHTML = '';
                data.forEach((element) => {
                    renderMessage(element);
                });
            });
            socket.on('loadAcceptFriendPage', function (data) {
                $('#chatFrame').hide();
                $('#sendBox').hide();
                $('#addFriend').show();
                let friendRequest = document.getElementById('friendRequest');
                if (data.length === 0) {
                    friendRequest.innerHTML = `
                        <div class="item">
                            <p style="width: 100%; text-align: center">No One</p>
                        </div>
                    `;
                } else {
                    friendRequest.innerHTML = '';
                    for (element of data) {
                        let template = `
                        <div class="item">
                            <i class="bx bx-chevron-right"></i>
                            <p style="max-width: 150px; text-align: left">${element.username}</p>
                            <button value="${element.username}" onclick="acceptFriendChat(this.value);">
                                <i class="bx bx-check-double"></i>
                            </button>
                        </div>
                        `;
                        friendRequest.innerHTML += template;
                    }
                }
            });
            socket.on('loadAddFriendPage', function (data) {
                $('#chatFrame').hide();
                $('#sendBox').hide();
                $('#addFriend').show();
                let listUser = document.getElementById('listUser');
                if (data.length === 0) {
                    listUser.innerHTML = `
                        <div class="item">
                            <p style="width: 100%; text-align: center">No One</p>
                        </div>
                    `;
                } else {
                    listUser.innerHTML = '';
                    for (element of data) {
                        let template = `
                        <div class="item">
                            <i class="bx bx-chevron-right"></i>
                            <p>${element.username}</p>
                            <button value="${element.username}" onclick="addFriendChat(this.value);"><i class='bx bx-message-rounded-add' ></i></button>
                        </div>
                        `;
                        listUser.innerHTML += template;
                    }
                }
                // listUser.scrollTop = listUser.scrollHeight;
            });
            socket.on('acceptFriendChat', function () {
                loadPage();
            });
            socket.on('addFriendChat', function () {
                loadPage();
            });
            //Hien thi thong tin nguoi dung khi dang nhap onl tren server
            socket.on('showUser', function (listConversation) {
                let user = document.getElementById('userName');
                user.innerHTML = '';
                user.innerHTML += `
                <button value="" class="userItem" onclick='loadAddFriendPage()'>
                    <img src="images/home.png" alt="" style="width: 50px; height: 50px" />
                    <p style='min-width: 60px;'>Home</p>
                    <span style="display: none; background-color: crimson; border-radius: 50%; position: absolute; width: 20px; height: 20px; left: 50px; top: 6px;"></span>
                </button>
                `;
                for (let element of listConversation) {
                    let divUserName = `
                        <button value="${element.username}" class="userItem ${element.username}" onclick='getReceiver(this.value)'>
                            <img src="images/user.png" alt="" style="width: 50px; height: 50px" />
                            <p>${element.username}</p>
                            <span class='${element.username}' style="display: none;"></span>
                        </button>
                        `;
                    user.innerHTML += divUserName;
                }
            });
            socket.on('loadNotification', function (data) {
                data.forEach((element) => {
                    let temp = '.userItem .' + element.sender;
                    // console.log(temp);
                    let userTag = document.querySelector(temp);
                    userTag.style.display = 'block';
                });
            });
            //------------------------------Function---------------------------
            async function loadPage() {
                await loadAcceptFriendPage();
                await loadAddFriendPage();
                await showListConversation();
                await loadNotification();
            }
            function loadAcceptFriendPage() {
                socket.emit('loadAcceptFriendPage', accountUser);
            }
            //loadAddFriendPage
            function loadAddFriendPage() {
                socket.emit('loadAddFriendPage', accountUser);
            }
            function showListConversation() {
                socket.emit('showUser', accountUser);
            }
            function loadNotification() {
                socket.emit('loadNotification', accountUser);
            }
            //add friend chat
            async function addFriendChat(friend) {
                // console.log(friend);
                await socket.emit('addFriendChat', friend, accountUser);
                await loadPage();
            }
            async function acceptFriendChat(friend) {
                await socket.emit('acceptFriendChat', friend, accountUser);
                await loadPage();
            }
            //Ham lay nguoi nhan tin nhan
            async function getReceiver(data) {
                receiver = data;
                // currentUser.textContent = receiver;
                await socket.emit('removeNotification', accountUser, receiver);
                await socket.emit('loadMessage', receiver, accountUser);
                $('#addFriend').hide();
                $('#sendBox').show();
                $('#chatFrame').show();
            }

            //Ham render tin nhan
            function renderMessage(msgObj) {
                //Them tin nhan vao chatFrame
                let chatCell = document.createElement('div');
                let div = document.createElement('div');
                let userChat = document.createElement('h5');
                let text = document.createElement('p');
                let time = document.createElement('p');
                if (msgObj.sender !== accountUser) {
                    chatCell.classList.add('chatContent', 'otherChat');
                    userChat.innerText = msgObj.sender;
                } else {
                    chatCell.classList.add('chatContent', 'mineChat');
                    userChat.innerText = 'Bạn';
                }
                text.textContent = msgObj.message;
                time.classList.add('time');
                time.textContent = moment(msgObj.created_time).format('hh:mm A DD MMM YYYY');
                chatCell.appendChild(userChat);
                div.appendChild(text);
                div.classList.add('item');
                chatCell.appendChild(div);
                chatCell.appendChild(time);
                chatFrame.appendChild(chatCell);
                chatFrame.scrollTop = chatFrame.scrollHeight;
            }
            //----------------------Main-------------------------------------------
            $('#chatFrame').hide();
            $('#sendBox').hide();
            loadPage();
            //Kiểm tra user đã đăng nhập vào server hay chưa
            socket.on('checkUser', function (status) {
                if (!status) {
                    socket.emit('logoutUser', accountUser);
                    window.location = '/';
                }
            });
            setInterval(function () {
                socket.emit('checkUser', accountUser);
            }, 1000);

            //Join vào phòng của chính user đó khi đăng nhập thành công
            socket.emit('joinUserRoom', accountUser);

            //----------------------Chat--------------------------
            //Xu ly ham gui tin nhan len cho toan bo moi nguoi
            socket.on('sendMessage', function (msgObj) {
                if (receiver !== '') {
                    renderMessage(msgObj);
                }
            });
            socket.on('receiveMessage', function (msgObj) {
                if (receiver != '' && receiver == msgObj.sender && msgObj.receiver == accountUser) {
                    renderMessage(msgObj);
                }
            });
            socket.on('notificationMsg', function (senderPara, receiverPara) {
                if (receiver != senderPara) {
                    let temp = '.userItem .' + senderPara;
                    // console.log(temp);
                    let userTag = document.querySelector(temp);
                    userTag.style.display = 'block';
                } else {
                    socket.emit('removeNotification', accountUser, receiver);
                }
            });
            socket.on('removeNotification', function (senderPara, receiverPara) {
                let temp = '.userItem .' + receiverPara;
                // console.log(temp);
                let userTag = document.querySelector(temp);
                userTag.style.display = 'none';
            });
            chatInput.addEventListener('submit', function (e) {
                e.preventDefault();
                if (message.value && message.value.trim() !== '' && receiver !== '') {
                    //Gui tin nhan len server lang nghe
                    socket.emit('sendMessage', {
                        message: message.value,
                        sender: accountUser,
                        receiver: receiver,
                    });
                }
                message.value = '';
                socket.emit('notificationMsg', accountUser, receiver);
            });

            //----------------------Typing--------------------------
            socket.on('typingMsg', function (Obj) {
                if (receiver != '' && receiver == Obj.sender && Obj.receiver == accountUser) {
                    let typing = document.getElementById('typing');
                    typing.style.display = 'block';
                    typing.textContent = Obj.sender + ' is typing...';
                }
            });
            message.addEventListener('focus', function () {
                socket.emit('typingMsg', { sender: accountUser, receiver: receiver });
            });
            socket.on('stopTyping', function (Obj) {
                if (receiver != '' && receiver == Obj.sender && Obj.receiver == accountUser) {
                    let typing = document.getElementById('typing');
                    typing.style.display = 'none';
                }
            });
            message.addEventListener('blur', function () {
                socket.emit('stopTyping', { sender: accountUser, receiver: receiver });
            });

            //----------------------Logout--------------------------

            // let logoutBtn = document.getElementById('logoutBtn');
            // logoutBtn.addEventListener('click', function () {
            //     socket.emit('logoutUser', accountUser);
            //     window.location = '/';
            // });

            window.addEventListener('unload', function () {
                socket.emit('logoutUser', accountUser);
                accountUser = '';
            });
        </script>
        <%} else{%>
        <script>
            window.location = '/';
        </script>
        <%}%>
        <!-- <script src="js/main.js"></script> -->
    </body>
</html>
